@using System.Globalization
@using TD.Common.Kendo.Mvc5.Grid
@using TD.CTS.WebUI.Models

@model TD.CTS.Data.Entities.Schedule

@(Html.Kendo().Grid<ScheduleProcedure>()
    .Name("ProceduresGrid")
    .Selectable(select => select.Type(GridSelectionType.Cell))
    //.Editable()
    .Columns(columns =>
    {
        columns.Bound(e => e.ProcedureCode).Title("Код");
        //columns.ButtonsCrud()
        //    .Width(80)
        //    .HeaderHtmlAttributes(new { style = "min-width:60px;vertical-align:bottom;text-align:right;" })
        //    .HtmlAttributes(new { @class = "k-group-cell" });
        columns.ForeignKey(e => e.ProcedureCode, (System.Collections.IEnumerable)ViewBag.Procedures, "Code", "Name")
            .Width(400)
            .Filterable(false)
            .HeaderTemplate(@"<div style=""text-align:right;width:200px;""></div><div style=""text-align:right;width:200px;"">Визиты</div><div>Процедуры</div>")
            .HtmlAttributes(new { @class = "k-group-cell" });

        var visits = (List<TD.CTS.Data.Entities.ScheduleVisit>)ViewBag.Visits;
        foreach (var visit in visits)
        {
            columns.Template(e => { })
                .ClientTemplate(/*"<span style='color:red;'>!</span>"*/"#= SelectedVisit(" + visit.TrialVisitID + ", data) #")
                .HeaderTemplate(string.Format(@"<div style='text-align:center;'></span><input type='hidden' value='{2}'/></div>
<div style=""text-align:center;"">{0}</div><div style=""text-align:center;"">{1}</div>", visit.TrialVisitName, visit.ScheduleDate.HasValue ? visit.ScheduleDate.Value.Date.ToString("dd.MM.yyyy"):"", visit.TrialVisitID))
                .HtmlAttributes(new { style = "text-align:center;" })
                .Width(100);

//            //buttonsRow.Append(@"<th style='text-align:center; style='text-align:right;><a class='k-button k-button-icontext k-grid-edit td-grid-button' href='\#' title='Изменить визит'><span class='k-icon k-edit td-grid-button-image'></span></a>");
//            //buttonsRow.Append(@"<a class='k-button k-button-icontext k-grid-delete td-grid-button' href='\#' title='Удалить визит'><span class='k-icon k-delete td-grid-button-image'></span></a></th>");
        }
        columns.Template(e => { }).ClientTemplate(" ").Width("100%").HtmlAttributes(new { @class = "k-group-cell" });

        //buttonsRow.Append("<th/></tr>");
    })
    .DataSource(dataSource => dataSource
       .Ajax()
       .Model(model =>
       {
           model.Id(e => e.ScheduleID);
           model.Field(e => e.ProcedureCode).Editable(false);
           model.Field(e => e.ScheduleID).DefaultValue(Model.Id);
           model.Field(e => e.TrialCode).DefaultValue(Model.TrialCode);
           model.Field(e => e.TrialCenterId).DefaultValue(Model.TrialCenterID);
           model.Field(e => e.VisitIds).DefaultValue(new List<int>());
       })
           .Read(read => read.Action("GetScheduleProcedures", "Schedules", new { ScheduleID = Model.Id }))
       //.Create(create => create.Action("AddTrialProcedure", "Trials"))
       //.Update(update => update.Action("UpdateTrialProcedure", "Trials"))
       //.Destroy(destroy => destroy.Action("DeleteTrialProcedure", "Trials"))
       .Events(events => events
           .Error("kendo_grid_error_handler").RequestEnd("RequestEnd"))
    )
    //.Events(events => events
        //.Edit("OnProcedureEdit")
        //.Change("OnChange")
        //.Save("OnProcedureSave")
        //.Cancel("OnProcedureCancel")
   //     )
)

<script>
    var isProcedureEdit = false;
    function RequestEnd(e) {
        if (e.type === "update" || e.type === "create") {
            isProcedureEdit = false;
        }
    }
    
    function SelectedVisit(visitId, data) {
        var btn = String.format("<button onclick=\"OpenProceduereEmployeeWindow(\'" + visitId + "','" + data.ProcedureCode+"')\" style=\"color:{0}; border:none; background-color:transparent;\" >{1}</button>", 'green', 'v');
        if ($.inArray(visitId, data.VisitIds) !== -1) {
          
            return btn;
            //return "<span style='color:green;'>V</span>"; //"<input type=\"checkbox\" value=\"" + visitId + "\" checked style=\"display:none;margin:0;\" /><span class=\"k-icon k-i-tick\"></span>";
        }
        return "";
        //return "<button onclick='OpenProceduereEmployeeWindow()' style='color:red; border:none; background-color:transperent;' >!</button>";
        //return "<span style='color:red;'>!</span>";//<input type=\"checkbox\" value=\"" + visitId + "\" style=\"display:none;margin:0;\" />
        // return "<input class=\"td-visit-checkbox\" type=\"checkbox\" value=\"" + visitId + "\" checked style=\"display:none;margin:0;\" /><span class=\"k-icon k-i-tick\"></span>";

    }



    kendo_grid_init($("#ProceduresGrid"));
    var procGrid = $("#ProceduresGrid");
    //$("#ProceduresGrid .k-grid-add.td-grid-button").click(function () {
    //procGrid.on("click", ".k-grid-add.td-grid-button", function () {
    //    ClearSelection();
    //    kendo_grid_createrow(procGrid);
    //    isProcedureEdit = true;
    //});

    //$("#ProceduresGrid .k-grid-addcolumn.td-grid-button").click(function () {
    //procGrid.on("click", ".k-grid-addcolumn.td-grid-button", function () {
    //    ClearSelection();
    //    LoadVisitEdit();
    //    //AddColumn(15);
    //});

    //procGrid.on("click", ".td-grid-editcolumn.td-grid-button", function () {
    //    ClearSelection();
    //    var id = $(this).find("input").val();
    //    LoadVisitEdit(id);
    //    //AddColumn(15);
    //});
</script>